// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkingWithProjects.API.Models;

namespace WorkingWithProjects.API.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20210501115216_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkingWithProjects.DATA.KindOfProject", b =>
                {
                    b.Property<int>("KindOfProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KindOfProjectId");

                    b.ToTable("KindsOfProject");

                    b.HasData(
                        new
                        {
                            KindOfProjectId = 1,
                            Name = "TestName1"
                        },
                        new
                        {
                            KindOfProjectId = 2,
                            Name = "TestName2"
                        },
                        new
                        {
                            KindOfProjectId = 3,
                            Name = "TestName3"
                        });
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.Progress", b =>
                {
                    b.Property<int>("ProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DesiredValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProgressId");

                    b.HasIndex("ProjectId")
                        .IsUnique();

                    b.ToTable("Progresses");
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KindOfProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("KindOfProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Description = "Description1",
                            KindOfProjectId = 1,
                            Title = "Title1",
                            UserId = 1
                        },
                        new
                        {
                            ProjectId = 2,
                            Description = "Description2",
                            KindOfProjectId = 2,
                            Title = "Title2",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Don",
                            LastName = "Yagon",
                            Role = 0
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lava",
                            LastName = "Yasha",
                            Role = 0
                        });
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.Progress", b =>
                {
                    b.HasOne("WorkingWithProjects.DATA.Project", "Project")
                        .WithOne("Progress")
                        .HasForeignKey("WorkingWithProjects.DATA.Progress", "ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.Project", b =>
                {
                    b.HasOne("WorkingWithProjects.DATA.KindOfProject", "KindOfProject")
                        .WithMany("Projects")
                        .HasForeignKey("KindOfProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkingWithProjects.DATA.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KindOfProject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.KindOfProject", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.Project", b =>
                {
                    b.Navigation("Progress");
                });

            modelBuilder.Entity("WorkingWithProjects.DATA.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
